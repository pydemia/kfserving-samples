apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ingress-istio-prd
  # namespace: istio-system
  annotations:
    # cert-manager.io/issuer
    # cert-manager.io/issuer: letsencrypt-istio-prd  # >= v0.11
    cert-manager.io/cluster-issuer: letsencrypt-istio-prd
    kubernetes.io/ingress.class: istio
    # kubernetes.io/tls-acme: "true"  # < Could not determine issuer for ingress due to bad annotations: failed to determine issuer name to be used for ingress resource
    kubernetes.io/ingress.allow-http: "true"
spec:
  tls:  # < placing a host in the TLS config will indicate a cert should be created
  - hosts:

    - prd.airuntime.com
    - app.prd.airuntime.com
    - gateway.prd.airuntime.com
    - kiali.prd.airuntime.com
    - prometheus.prd.airuntime.com
    - grafana.prd.airuntime.com
    - tracing.prd.airuntime.com
    - dashboard.prd.airuntime.com
    - es.prd.airuntime.com
    - kibana.prd.airuntime.com
    - fluentd.prd.airuntime.com
    - tekton.prd.airuntime.com

    secretName: ingress-istio-tls-prd  # < cert-manager will store the created certificate in this secret.
    # `kubectl -n kubeflow describe certificates.cert-manager.io nginx-tls-prod`
  rules:
  - host: "*.prd.airuntime.com"  # www.example.com
    http:
      paths:
      - path: /
        backend:
          serviceName: istio-ingressgateway
          servicePort: 80
  # - host: "dashboard.prd.airuntime.com"  # www.example.com
  #   http:
  #     paths:
  #     - path: /
  #       backend:
  #         serviceName: istio-ingressgateway
  #         servicePort: 443
