apiVersion: cert-manager.io/v1alpha2
kind: ClusterIssuer
metadata:
  labels:
    app.kubernetes.io/component: cert-manager
    app.kubernetes.io/name: cert-manager
    kustomize.component: cert-manager
  name: kubeflow-self-signing-issuer
  namespace: cert-manager
spec:
  selfSigned: {}
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: istio-ingress-crt
  # `name: istio-ingress-crt` is automatically changed as `istio-ingressgateway-certs` 
  namespace: istio-system
spec:
  secretName: istio-ingressgateway-certs
  domains:
  - $(domain)
  commonName: "istio-ingressgateway-root-ca"
  isCA: true
  issuerRef:
    name: kubeflow-self-signing-issuer
    kind: ClusterIssuer
# ---
# apiVersion: cert-manager.io/v1alpha2  # >= v0.11
# kind: ClusterIssuer
# metadata:
#   labels:
#     app.kubernetes.io/component: cert-manager
#     app.kubernetes.io/name: cert-manager
#     kustomize.component: cert-manager
#   name: kubeflow-self-signing-issuer
#   namespace: cert-manager
# spec:
#   selfSigned: {}
# ---
# apiVersion: cert-manager.io/v1alpha2
# kind: Certificate
# metadata:
#   name: istio-ingressgateway-certs
#   namespace: istio-system
# spec:
#   commonName: istio-ingressgateway.istio-system.svc
#   # Use ipAddresses if your LoadBalancer issues an IP
#   ipAddresses:
#   - <LoadBalancer IP>
#   # Use dnsNames if your LoadBalancer issues a hostname (eg on AWS)
#   dnsNames:
#   - <LoadBalancer HostName>
#   isCA: true
#   issuerRef:
#     kind: ClusterIssuer
#     name: kubeflow-self-signing-issuer
#   secretName: istio-ingressgateway-certs