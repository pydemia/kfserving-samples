apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: harbor-ingress
  namespace: default
  labels:
    app: harbor
  annotations:
    cert-manager.io/issuer: letsencrypt-prd
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.allow-http: "false"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    ingress.kubernetes.io/backends: '{"k8s-be-31105--75b1b90f9c5c0545":"HEALTHY","k8s1-75b1b90f-default-my-release-harbor-core-80-25530051":"HEALTHY","k8s1-75b1b90f-default-my-release-harbor-portal-80-53b4cab0":"HEALTHY"}'
    ingress.kubernetes.io/forwarding-rule: k8s2-fr-dn7dhwd5-default-my-release-harbor-ingress-gcfxd6m2
    ingress.kubernetes.io/https-forwarding-rule: k8s2-fs-dn7dhwd5-default-my-release-harbor-ingress-gcfxd6m2
    ingress.kubernetes.io/https-target-proxy: k8s2-ts-dn7dhwd5-default-my-release-harbor-ingress-gcfxd6m2
    ingress.kubernetes.io/proxy-body-size: "0"
    # ingress.kubernetes.io/ssl-cert: k8s2-cr-dn7dhwd5-51w34pv69hcyb7wk-1c4666dc4202a27c
    ingress.kubernetes.io/ssl-redirect: "true"
    # ingress.kubernetes.io/static-ip: k8s2-fr-dn7dhwd5-default-my-release-harbor-ingress-gcfxd6m2
    ingress.kubernetes.io/target-proxy: k8s2-tp-dn7dhwd5-default-my-release-harbor-ingress-gcfxd6m2
    ingress.kubernetes.io/url-map: k8s2-um-dn7dhwd5-default-my-release-harbor-ingress-gcfxd6m2
    # meta.helm.sh/release-name: my-release
    # meta.helm.sh/release-namespace: default
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - harbor.airuntime.com
    secretName: harbor-ingress-tls
  rules:
  - host: harbor.airuntime.com
    http:
      paths:
      - backend:
          serviceName: my-release-harbor-portal
          servicePort: 80
        path: /
      - backend:
          serviceName: my-release-harbor-core
          servicePort: 80
        path: /api
      - backend:
          serviceName: my-release-harbor-core
          servicePort: 80
        path: /service
      - backend:
          serviceName: my-release-harbor-core
          servicePort: 80
        path: /v2
      - backend:
          serviceName: my-release-harbor-core
          servicePort: 80
        path: /chartrepo
      - backend:
          serviceName: my-release-harbor-core
          servicePort: 80
        path: /c
      - backend:
          serviceName: headless-to-minio
          servicePort: 80
        path: /minio
---
apiVersion: cert-manager.io/v1alpha3
kind: Issuer
metadata:
  name: letsencrypt-prd
  namespace: default
spec:
  acme:
    email: yj.kim1@sk.com
    server: https://acme-v02.api.letsencrypt.org/directory
    # preferredChain: "ISRG Root X1"
    privateKeySecretRef:
      name: letsencrypt-prd-pkey
    solvers:
    - selector: {}
      http01:
        ingress:
          class: nginx
